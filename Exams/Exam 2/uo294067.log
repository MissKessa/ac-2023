=~=~=~=~=~=~=~=~=~=~=~= PuTTY log 2023.12.18 16:31:10 =~=~=~=~=~=~=~=~=~=~=~=
login as: student
student@localhost's password: 
Welcome to Ubuntu 16.04.6 LTS (GNU/Linux 4.4.0-210-generic i686)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

12 packages can be updated.
2 updates are security updates.


Last login: Thu Nov 30 19:06:02 2023
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  prueba
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  prueba
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  prueba
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  prueba
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  prueba
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  prueba
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  prueba
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  prueba
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  prueba
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  prueba
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  prueba
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  prueba
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  prueba
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  prueba
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  prueba
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  prueba
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  prueba
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  prueba
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  prueba
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  prueba
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  prueba
student@2ac:~$ 
student@2ac:~$ 
student@2ac:~$ 
student@2ac:~$ 
student@2ac:~$ 
student@2ac:~$ 
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  exam2  prueba
student@2ac:~$ cd exam2/
student@2ac:~/exam2$ ls
exercise2.c
student@2ac:~/exam2$ nano -c exercise2.c 2
[ Reading File ][ Read 103 lines ]  GNU nano 2.5.3             File: exercise2.c                                  #include <stdint.h>#include <stdio.h>#define D 200///////////////////////////////////////////////////////////////////////////////$// TODO: Write down your DNI without the final letter///////////////////////////////////////////////////////////////////////////////$const unsigned int DNI =  *** GAP 1 *** ; //Example: const unsigned int DNI = 1$void fillMatrix1(uint8_t matrix[][D][D]) {for (int i = 0; i < D; i++) {for (int j = 0; j < D; j++) {for (int k = 0; k < D; k++) {matrix[i][j][k] = 0;}}}}^G Get Help  ^O Write Out ^W Where Is  ^K Cut Text  ^J Justify   ^C Cur Pos^X Exit^R Read File ^\ Replace   ^U Uncut Text^T To Spell  ^_ Go To Line[ line 2/104 (1%), col 1/19 (5%), char 20/2389 (0%) ]32 (100%), char 39/2389 (1%) ]434 (7%), char 405483 (15426554137/2389 (5%) ]  GNU nano 2.5.3             File: exercise2.c                                  #include <stdint.h>#include <stdio.h>#define D 200///////////////////////////////////////////////////////////////////////////////$// TODO: Write down your DNI without the final letter///////////////////////////////////////////////////////////////////////////////$const unsigned int DNI =  *** GAP 1 *** ; //Example: const unsigned int DNI = 1$void fillMatrix1(uint8_t matrix[][D][D]) {for (int i = 0; i < D; i++) {for (int j = 0; j < D; j++) {for (int k = 0; k < D; k++) {matrix[i][j][k] = 0;}}}}[ line 6/104 (5%), col 1/54 (1%), char 137/2389 (5%) ]^G Get Help  ^O Write Out ^W Where Is  ^K Cut Text  ^J Justify   ^C Cur Pos^X Exit^R Read File ^\ Replace   ^U Uncut Text^T To Spell  ^_ Go To Line  GNU nano 2.5.3             File: exercise2.c                                  #include <stdint.h>#include <stdio.h>#define D 200///////////////////////////////////////////////////////////////////////////////$// TODO: Write down your DNI without the final letter///////////////////////////////////////////////////////////////////////////////$const unsigned int DNI =  *** GAP 1 *** ; //Example: const unsigned int DNI = 1$void fillMatrix1(uint8_t matrix[][D][D]) {for (int i = 0; i < D; i++) {for (int j = 0; j < D; j++) {for (int k = 0; k < D; k++) {matrix[i][j][k] = 0;}}}}[ line 6/104 (5%), col 1/54 (1%), char 137/2389 (5%) ]^G Get Help  ^O Write Out ^W Where Is  ^K Cut Text  ^J Justify   ^C Cur Pos^X Exit^R Read File ^\ Replace   ^U Uncut Text^T To Spell  ^_ Go To Linevoid fillMatrix2(uint8_t matrix[][D][D]) {    for (int k = 0; k < D; k++) { for (int i = 0; i < D; i++) {for (int j = 0; j < D; j++) {matrix[i][j][k] = 0;}}}}void fillMatrix3(uint8_t matrix[][D][D]) {for (int j = 0; j < D; j++) {for (int k = 0; k < D; k++) {for (int i = 0; i < D; i++) {matrix[i][j][k] = 0;}}}}void fillMatrix4(uint8_t matrix[][D][D]) {for (int k = 0; k < D; k++) {for (int j = 0; j < D; j++) {for (int i = 0; i < D; i++) {matrix[i][j][k] = 0;}}}}void fillMatrix5(uint8_t matrix[][D][D]) {for (int i = 0; i < D; i++) {[ line 6/104 (5%), col 1/54 (1%), char 137/2389 (5%) ]^G Get Help  ^O Write Out ^W Where Is  ^K Cut Text  ^J Justify   ^C Cur Pos^X Exit^R Read File ^\ Replace   ^U Uncut Text^T To Spell  ^_ Go To Line7683917[ line 8/104 (7%), col 1/87 (1%), char 274/2389 (11981 (100%), char 361/2389 (15%) ]10/104 (9%), col 1/43 (222/43 (433/43 (644/43 (95[ line 10/104 (9%), col 5/43 (1166377688899/43 (207010/43 (23%), char 371/2389 (15%) ]1522733/43 (304425 [ line 98/1 (100%), char 361[ line 8/104 (7%), col 14/87 (16287257868979908/87 (20191220231442553664775886997/87 (3130082193230431540432932821710Modified GAP 1 *** ; //Example: const unsigned int DNI = 1268* GAP 1 *** ; //Example: const unsigned int DNI = 12357 GAP 1 *** ; //Example: const unsigned int DNI = 12344 (326GAP 1 *** ; //Example: const unsigned int DNI = 1234535AP 1 *** ; //Example: const unsigned int DNI = 12345624P 1 *** ; //Example: const unsigned int DNI = 123456781 (3330279 (341807 (3579685 (367467 ; //Example: const unsigned int DNI = 123456788/75 (371/23771 ; //Example: const unsigned int DNI = 123456789/76 (382/23787 ; //Example: const unsigned int DNI = 1234567830/773/23798 ; //Example: const unsigned int DNI = 123456781/78 (394/23809 ; //Example: const unsigned int DNI = 123456782/79 (405/23816 ; //Example: const unsigned int DNI = 123456783/80 (416/23823 ; //Example: const unsigned int DNI = 123456784/817/23834 ; //Example: const unsigned int DNI = 123456$5/82 (428/2384File Name to Write: exercise2.c                                                    M-D DOS Format  M-A Append      M-B Backup FileC Cancel       M-M Mac Format  M-P Prepend     ^T To Files [ Wrote 103 lines ]        ^O Write Out ^W Where Is  ^K Cut Text  ^J Justify   ^C Cur PosX Exit      ^R Read File ^\ Replace   ^U Uncut Text^T To Spell  ^_ Go To Linestudent@2ac:~/exam2$ gcc exercise2.c -o exercise2.c 
student@2ac:~/exam2$ ti:./exercise2 
student@2ac:~/exam2$ valgrind --tool=cachegrind ./exercise2 
==1705== Cachegrind, a cache and branch-prediction profiler
==1705== Copyright (C) 2002-2015, and GNU GPL'd, by Nicholas Nethercote et al.
==1705== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1705== Command: ./exercise2
==1705== 
--1705-- warning: L3 cache found, using its data for the LL simulation.
--1705-- warning: specified LL cache: line_size 64  assoc 16  total_size 12,582,912
--1705-- warning: simulated LL cache: line_size 64  assoc 24  total_size 12,582,912
==1705== 
==1705== I   refs:      2,085,735,156
==1705== I1  misses:              724
==1705== LLi misses:              717
==1705== I1  miss rate:          0.00%
==1705== LLi miss rate:          0.00%
==1705== 
==1705== D   refs:      1,123,264,175  (962,445,704 rd   + 160,818,471 wr)
==1705== D1  misses:        2,501,173  (      1,017 rd   +   2,500,156 wr)
==1705== LLd misses:          125,942  (        849 rd   +     125,093 wr)
==1705== D1  miss rate:           0.2% (        0.0%     +         1.6%  )
==1705== LLd miss rate:           0.0% (        0.0%     +         0.1%  )
==1705== 
==1705== LL refs:           2,501,897  (      1,741 rd   +   2,500,156 wr)
==1705== LL misses:           126,659  (      1,566 rd   +     125,093 wr)
==1705== LL miss rate:            0.0% (        0.0%     +         0.1%  )
student@2ac:~/exam2$ student@2ac:~/exam2$ cd ..
student@2ac:~$ cd
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  exam2  exam3  prueba
student@2ac:~$ cd exam3
student@2ac:~/exam3$ ls
exercise3.c
student@2ac:~/exam3$ cd exnano .-c exercise3.c 
[ Reading File ][ Read 100 lines (Converted from DOS format) ]  GNU nano 2.5.3                   File: exercise3.c                                              #include <stdio.h>#include <sys/types.h>#include <unistd.h>#include <stdlib.h>#include <math.h>#include <atc/linmem.h>int global = 0xABCFEF02;int task(){return 0xABCFEF03;}int type(int number, int n) {int aux = (number / (int)pow(10, n)) % 10;if (aux <= 3) {return 1;}else if (aux <=6){return 2;}else {return 3;}}int main(void){// *** Start GAP 1 ***// Fill with your DNI without letterint DNI = ;// *** End GAP 1 ***unsigned int pte_value, ph_addr, f_vp;int local = 0xABCFEDF1;void *var;int examType = type(DNI, 2);if (examType == 1){var = (void *)&local;}else if (examType == 2){var = (void *)&task;}^G Get Help     ^O Write Out    ^W Where Is     ^K Cut Text     ^J Justify^C Cur Pos^X Exit^R Read File    ^\ Replace^U Uncut Text   ^T To Spell     ^_ Go To Line  GNU nano 2.5.3                   File: exercise3.c                                              #include <stdio.h>#include <sys/types.h>#include <unistd.h>#include <stdlib.h>#include <math.h>#include <atc/linmem.h>int global = 0xABCFEF02;int task(){return 0xABCFEF03;}int type(int number, int n) {int aux = (number / (int)pow(10, n)) % 10;if (aux <= 3) {return 1;}else if (aux <=6){return 2;}else {return 3;}}int main(void){// *** Start GAP 1 ***// Fill with your DNI without letterint DNI = ;// *** End GAP 1 ***unsigned int pte_value, ph_addr, f_vp;int local = 0xABCFEDF1;void *var;int examType = type(DNI, 2);if (examType == 1){var = (void *)&local;}else if (examType == 2){var = (void *)&task;}[ Read 100 lines (Converted from DOS format) ]^G Get Help     ^O Write Out    ^W Where Is     ^K Cut Text     ^J Justify^C Cur Pos^X Exit^R Read File    ^\ Replace^U Uncut Text   ^T To Spell     ^_ Go To Line  GNU nano 2.5.3                   File: exercise3.c                                              #include <stdio.h>#include <sys/types.h>#include <unistd.h>#include <stdlib.h>#include <math.h>#include <atc/linmem.h>int global = 0xABCFEF02;int task(){return 0xABCFEF03;}int type(int number, int n) {int aux = (number / (int)pow(10, n)) % 10;if (aux <= 3) {return 1;}else if (aux <=6){return 2;}else {return 3;}}int main(void){// *** Start GAP 1 ***// Fill with your DNI without letterint DNI = ;// *** End GAP 1 ***unsigned int pte_value, ph_addr, f_vp;int local = 0xABCFEDF1;void *var;int examType = type(DNI, 2);if (examType == 1){var = (void *)&local;}else if (examType == 2){var = (void *)&task;}[ Read 100 lines (Converted from DOS format) ]^G Get Help     ^O Write Out    ^W Where Is     ^K Cut Text     ^J Justify^C Cur Pos^X Exit^R Read File    ^\ Replace^U Uncut Text   ^T To Spell     ^_ Go To Line     File: exercise3.c                   [ line 1/101 (0%), col 1/19 (5%), char 0/1664 (0%) ]^Y Prev Page^V Next Page2123 (419/1664 (1%) ]320 (54224363541884[ line 6/101 (5%), col 1/24 (4%), char 1006761 (100%), char 124/1664 (7%) ]8725 (4%), char 125981 (100%), char 150/1664 (9%) ]10/101 (9%), col 1/11 (91[ line 11/101 (102 (5062217 (3432 (50811%) ][ line 14/101 (13%), col 1/1 (106 [ line 15/101 (14%), col 1/30 (376547 (2213[ line 17/101 (16%), col 1/1 (100645 [ line 18/101 (17%), col 1/23 (45[ line 19/101 (18%), col 1/10 (10816 [ line 20/101 (19%), col 1/26 (347[ line 21/101 (20%), col 1/10 (1096 [ line 22/101 (21%), col 1/26 (39[ line 23/101 (22%), col 1/10 (103189 [ line 24/101 (23%), col 1/26 (321[ line 25/101 (24%), col 1/10 (103320 [ line 26/101 (25%), col 1/14 (76[ line 27/101 (26%), col 1/10 (1043 [ line 28/101 (27%), col 1/26 (36[ line 29/101 (28%), col 1/10 (10581 [ line 30/101 (29%), col 1/2 (561[ line 31/101 (30%), col 1/1 (103 [ line 32/101 (31%), col 1/15 (64322 (507924331 (3815445 (240546520 (5436769 (3567879 (117887629 (3567650 (54365445 (2054[ line 35/101 (34%), col 9/45 (20610/45 (22%), char 407/1664 (24%) ]14826938104/45 (3115326537748/45 (4056520 (9537954803Modified7 ;9/214/16651 ;20/225/16667 ;1/23 (916/16678 ;2/247/16689 ;3/25 (928/16696 ;4/269/16703 ;5/2760/16714 ;6/281/1672File Name to Write [DOS Format]: exercise3.c                                                                           M-D DOS Format        M-A Append            M-B Backup FileC Cancel      M-M Mac Format        M-P Prepend           ^T To Files [ Wrote 100 lines ]        ^O Write Out    ^W Where Is     ^K Cut Text     ^J Justify      ^C Cur Pos^Y Prev PageX Exit  ^R Read File    ^\ Replace      ^U Uncut Text   ^T To Spell     ^_ Go To Line   ^V Next Page[ line 37/101 (36%), col 26/29 (89%), char 482/1672 (28%) ]879/9 (100%), char 487/1672 (29%) ]9826/47 (55%), char 506/1672 (30%) ]40932 (8142[ line 41/101 (40%), col 19/19 (100643 [ line 42/101 (41%), col 9/9 (100%), char 5663226/37 (70%), char 585/1672 (34%) ]4327 (96616[ line 45/101 (44%), col 10/10 (10097 [ line 46/101 (45%), col 26/38 (6831 [ line 47/101 (46%), col 10/10 (100468 [ line 48/101 (47%), col 26/32 (81659 [ line 49/101 (48%), col 10/10 (1007440 [ line 50/101 (49%), col 26/37 (7861 [ line 51/101 (50%), col 10/10 (10700else {var = (void *)&global;}// *** Start GAP 2 ***// Save in "pte_value" the page table entry associated with the virtual address that stores "var"if (){perror("Linmem module error");return -1;}// *** End GAP 2 ***// *** Start GAP3 *** // Check that the page is in memoryif (){// Get the flags associated to the memory page and store them in the variable "f_vp"// Get the physical address of the memory and store them in the variable "ph_addr"}214/1472320/1010 [ line 54/101 (53%), col 26/39 (66223[ line 55/101 (54%), col 10/10 (100384 [ line 56/101 (55%), col 1/1 (100%), char 73976408726/31 (83%), char 759/1672 (45%) ][ line 59/101 (58%), col 26/106 (2483660914/14 (100870521600/103  [ line 62/101 (61%), col 1/47 (2%), char 874[ line 61/101 (60%), col 10/10 (100%), char 873/1672 (52%) ] [ line 60/101 (59%), col 10/14 (716611872/14 (8583/14 (929Modifiedget_pte(virtual_addr, &pte))40/41 (9796/1699 (523955824_e))9/425/1700e))8/414/1699955_))40/426/1700v))1/437/1701a))2/448/1702l))3/459/1703u))4/46900/1704e))5/471/1705430318992/47 (89817705639258047/47 (78366254142030892/47 (6881572881/46 (677/17040/45 (666/170329/44 (655/1702 (518/434/17017/42 (643/17006/41 (632/16995/40 (621/16984/39 (610/16973/38 (6079/16962/37 (598/16951/36 (587/16945 (603l, &pte_value))2/36 (618/1694o, &pte_value))3/37 (629/1695c, &pte_value))4/38 (6380/1696a, &pte_value))5/39 (641/1697l, &pte_value))6/40 (652/16985214003/40 (5779258127&local, &pte_value))2/41 (538/1699[ line 61/101 (60%), col 10/10 (1009002 [ line 62/101 (61%), col 22/47 (46833227 (81415[ line 64/101 (63%), col 10/10 (1009 [ line 65/101 (64%), col 22/29 (75646659/9 (100%), char 973/1699 (57%) ]7658722/31 (70%), char 990/1699 (58%) ][ line 69/101 (68%), col 22/44 (50%), char 1014970914/14 (100%), char 1043/1699 (61%) ]3/14 (92%), char 1042p)4/15 (933/1700t)5/164/1701e)6/17 (945/17021700/10 (100%), char 1049/1702 (61%) ] [ line 72/101 (71%), col 9/101 (8%), char 1051327 (521386431/1 (10040549/99 (9%), char 1142/1702 (67%) ]6517 (52%), char 1227/1702 (72%) ][ line 77/101 (76%), col 10/10 (100%), char 1231/1702 (72%) ]var = (void *)&global; // *** Start GAP 2 *** // Save in "pte_value" the page table entry associated with the virtual address that stores "var"if (get_pte(&local, &pte_value)){ perror("Linmem module error"); return -1; }// *** End GAP 2 ***   // *** Start GAP3 *** // Check that the page is in memorypte)// Get the flags associated to the memory page and store them in the variable "f_vp" // Get the physical address of the memory and store them in the variable "ph_addr" // *** End GAP 3 *** perror("The page has no page frame allocated\n");return -1;}       printf("Virtual Address:\t%.8Xh\n", (unsigned int) var);printf("Physical Address:\t%.8Xh\n", ph_addr);printf("Flags Virtual Page:\t%.3Xh\n", f_vp); // *** Start GAP 4 ***// Show ONLY the page table entry  // *** End GAP 4 *** printf("\nProcess Identifier (PID): %d\n", getpid());printf("\n---- Press [ENTER] to continue");getchar();  return 0;}876/29 (55%), char 1240760/10 (100%), char 1231/1702 (72%) ] [ line 76/101 (75%), col 9/17 (52%), char 12275499 (9%), char 1142/1702 (67%) ]431/1 (100%), char 1140/1702 (66%) ]329/17 (52382101 (80511[ line 71/101 (70%), col 10/10 (100%), char 1049/1702 (61%) ] [ line 72/101 (71%), col 9/101 (8%), char 1051327 (521386431/1 (10040329/17 (52382101 (80511[ line 71/101 (70%), col 10/10 (100%), char 1049/1702 (61%) ]0696/17 (94%), char 104569844 (360859 [ line 68/101 (67%), col 16/31 (51%), char 9847769/9 (100%), char 9756535416/29 (55%), char 958/1702 (56%) ][ line 64/101 (63%), col 10/10 (100495 [ line 63/101 (62%), col 9/27 (33%), char 935/1702 (54%) ]2147 (19022[ line 61/101 (60%), col 10/10 (100%), char 900/1702 (52%) ] [ line 60/101 (59%), col 16/41 (398721[ line 59/101 (58%), col 16/106 (1577345 [ line 58/101 (57%), col 16/31 (5149476/1 (100%), char 740/1702 (43%) ]6539[ line 55/101 (54%), col 10/10 (100%), char 738/1702 (43%) ] [ line 54/101 (53%), col 9/39 (23%), char 712/1702 (41%) ][ line 53/101 (52%), col 10/10 (100%), char 710/1702 (41%) ]{return 3;}}int main(void){// *** Start GAP 1 ***// Fill with your DNI without letterint DNI =71789634 ;// *** End GAP 1 ***unsigned int pte_value, ph_addr, f_vp;int local = 0xABCFEDF1;void *var;int examType = type(DNI, 2);if (examType == 1){var = (void *)&local;}else if (examType == 2){var = (void *)&task;}else 214/1407100/100 [ line 50/101 (49%), col 9/37 (24%), char 676/1702 (39%) ][ line 49/101 (48%), col 10/10 (100%), char 674/1702 (39%) ] [ line 50/101 (49%), col 9/37 (24%), char 676[ line 51/101 (50%), col 10/10 (100%), char 700/1702 (41%) ]214/147320/1010 [ line 54/101 (53%), col 9/39 (23%), char 712[ line 55/101 (54%), col 10/10 (100%), char 738/1702 (43%) ] [ line 56/101 (55%), col 1/1 (100%), char 7397640876/31 (51%), char 749/1702 (44%) ][ line 59/101 (58%), col 16/106 (15735 [ line 60/101 (59%), col 16/41 (3987251[ line 61/101 (60%), col 10/10 (1009002 [ line 62/101 (61%), col 9/47 (19%), char 9023227 (33354[ line 64/101 (63%), col 10/10 (100%), char 949/1702 (55%) ] [ line 65/101 (64%), col 16/29 (55586659/9 (100%), char 973/1702 (57%) ]7658716/31 (51%), char 984/1702 (57%) ][ line 69/101 (68%), col 16/44 (36%), char 1008970917 (94456169844 (360859 [ line 68/101 (67%), col 16/31 (51%), char 9847769/9 (100%), char 9756535416/29 (55%), char 958/1702 (56%) ][ line 64/101 (63%), col 10/10 (100495 [ line 63/101 (62%), col 9/27 (33%), char 935/1702 (54%) ]2147 (19022[ line 61/101 (60%), col 10/10 (100%), char 900/1702 (52%) ] [ line 60/101 (59%), col 16/41 (3987217/41 (41383496520861/41 (5170 (52139 (5308 (556997 (5686 (5875 (606b, &pte_value))2/36 (618/16971/35 (607/1696v, &pte_value))2/36 (618/1697a, &pte_value))3/37 (629/1698r, &pte_value))4/38 (6380/1699File Name to Write [DOS Format]: exercise3.c                                                                           M-D DOS Format        M-A Append            M-B Backup FileC Cancel      M-M Mac Format        M-P Prepend           ^T To Files [ Wrote 100 lines ]        ^O Write Out    ^W Where Is     ^K Cut Text     ^J Justify      ^C Cur Pos^Y Prev PageX Exit  ^R Read File    ^\ Replace      ^U Uncut Text   ^T To Spell     ^_ Go To Line   ^V Next Page[ line 61/101 (60%), col 10/10 (100%), char 897/1699 (52%) ] [ line 62/101 (61%), col 24/47 (519033227 (88405[ line 64/101 (63%), col 10/10 (1006 [ line 65/101 (64%), col 24/29 (82636659/9 (100%), char 970/1699 (57%) ]7628724/31 (77%), char 989/1699 (58%) ][ line 69/101 (68%), col 24/44 (54%), char 1013970917/17 (100%), char 1043/1699 (61%) ]1700/1062124/101 (23521010/10 (100410697/17369824/44 (54%), char 1013/1699 (59%) ] [ line 68/101 (67%), col 24/31 (77%), char 9898769/9 (100%), char 972/1699 (57%) ]6505424/29 (82%), char 963/1699 (56%) ][ line 64/101 (63%), col 10/10 (100465 [ line 63/101 (62%), col 24/27 (8802147 (51073[ line 61/101 (60%), col 10/10 (100892 [ line 60/101 (59%), col 24/38 (63801[ line 59/101 (58%), col 24/106 (2278145 [ line 58/101 (57%), col 24/31 (77574[ line 59/101 (58%), col 24/106 (22815 [ line 60/101 (59%), col 24/38 (6388051[ line 61/101 (60%), col 10/10 (100972 [ line 62/101 (61%), col 24/47 (519033227 (88405[ line 64/101 (63%), col 10/10 (1006 [ line 65/101 (64%), col 24/29 (82636659/9 (100%), char 970/1699 (57%) ]7628724/31 (77%), char 989/1699 (58%) ][ line 69/101 (68%), col 24/44 (54%), char 1013970917/17 (100%), char 1043/1699 (61%) ]6/17 (94%), char 10425/17 (881Modifiede)4/16 (870/1698e)3/15 (8639/1697e)2/14 (858/1696)3 (925))3/149/1696 2/138/1695()3/149/1696(pte & 0x00000001) == 1)36/37 (9762/1719File Name to Write [DOS Format]: exercise3.c                                                                           M-D DOS Format        M-A Append            M-B Backup FileC Cancel      M-M Mac Format        M-P Prepend           ^T To Files [ Wrote 100 lines ]        ^O Write Out    ^W Where Is     ^K Cut Text     ^J Justify      ^C Cur Pos^Y Prev PageX Exit  ^R Read File    ^\ Replace      ^U Uncut Text   ^T To Spell     ^_ Go To Line   ^V Next Page[ line 71/101 (70%), col 10/10 (100%), char 1066/1719 (62%) ]2136/101 (358833217/17 (1001567Modified flags_vp = (unsigned int)(pte & 0x0000FFF);60/6099/1762 (6859/60 (98%), char 1198/1762 (67%) ]8677566355144033/60 (882261150038949188077/60 (7866655544333122011/60 (6806067939588377166055/60 (584463352231110006929/60 (4888677566355144033/60 (38252611500/59 (3359/176119/58 (328/17608/57 (317/17597/56 (306/1758fs_vp = (unsigned int)(pte & 0x0000FFF);8/57 (317/17596 (328File Name to Write [DOS Format]: exercise3.c                                                                           M-D DOS Format        M-A Append            M-B Backup FileC Cancel      M-M Mac Format        M-P Prepend           ^T To Files [ Wrote 100 lines ]        ^O Write Out    ^W Where Is     ^K Cut Text     ^J Justify      ^C Cur Pos^Y Prev PageX Exit  ^R Read File    ^\ Replace      ^U Uncut Text   ^T To Spell     ^_ Go To Line   ^V Next Page[ line 74/101 (73%), col 1/1 (100%), char 1196/1758 (68%) ][ line 75/101 (74%), col 18/99 (18200657/17 (100%), char 1284/1758 (73%) ]Modified physical_addr = (pte & 0xFFFF000)+((unsigned int) virtual_addr & 0x0000FFF);93/93360/1834 (742/93 (98%), char 1359178067389568457346235124013/93 (890284917806779468357246135024/93 (7913802739168205769468357246035/93 (692481370262915804759368257146035/93 (5924813601251914803749268157046/93 (493582471360250914803739168057/93 (39468357204613502429913802729168057/93 (2946735624513/920/18332/91 (2489/18321/90 (238/18310/89 (227/183019/88 (216/1829785499 (190165 [ line 74/101 (73%), col 1/1 (100196[ line 73/101 (72%), col 19/56 (3358321101 (18%), char 1071/1828 (58%) ]100/10 (100660699/37 (51%), char 1045/1828 (57%) ]8/37 (484753632753_ & 0x01) == 1)8/38 (474/1829v & 0x01) == 1)9/39 (485/1830a & 0x01) == 1)20/40 (506/1831l & 0x01) == 1)1/41 (517/1832u & 0x01) == 1)2/42 (528/1833e & 0x01) == 1)3/43 (539/1834File Name to Write [DOS Format]: exercise3.c                                                                           M-D DOS Format        M-A Append            M-B Backup FileC Cancel      M-M Mac Format        M-P Prepend           ^T To Files [ Wrote 100 lines ]        ^O Write Out    ^W Where Is     ^K Cut Text     ^J Justify      ^C Cur Pos^Y Prev PageX Exit  ^R Read File    ^\ Replace      ^U Uncut Text   ^T To Spell     ^_ Go To Line   ^V Next Page[ line 71/101 (70%), col 10/10 (100%), char 1072/1834 (58%) ]2123/101 (22813256 (41%), char 1168/1834 (63%) ] [ line 74/101 (73%), col 1/1 (1002025[ line 73/101 (72%), col 23/56 (41168342954706617828/56 (503914430351562773884/56 (609528064176287399440/56 (715136257Modified_ & 0x0000FFF);3/578/1835v & 0x0000FFF);4/589/1836a & 0x0000FFF);5/59 (7690/1837l & 0x0000FFF);6/601/1838u & 0x0000FFF);7/61 (772/1839e & 0x0000FFF);8/623/1840File Name to Write [DOS Format]: exercise3.c                                                                           M-D DOS Format        M-A Append            M-B Backup FileC Cancel      M-M Mac Format        M-P Prepend           ^T To Files [ Wrote 100 lines ]        ^O Write Out    ^W Where Is     ^K Cut Text     ^J Justify      ^C Cur Pos^Y Prev PageX Exit  ^R Read File    ^\ Replace      ^U Uncut Text   ^T To Spell     ^_ Go To Line   ^V Next Page[ line 74/101 (73%), col 1/1 (100%), char 1208/1840 (65%) ][ line 75/101 (74%), col 48/99 (484276587 (553277274662551414033/87 (492281170051939488377266155044/87 (39337226115004091510Modified_ & 0xFFFF000)+((unsigned int) virtual_addr & 0x0000FFF);2/88 (361/1841v & 0xFFFF000)+((unsigned int) virtual_addr & 0x0000FFF);3/89 (372/1842a & 0xFFFF000)+((unsigned int) virtual_addr & 0x0000FFF);4/903/1843l & 0xFFFF000)+((unsigned int) virtual_addr & 0x0000FFF);5/91 (384/1844u & 0xFFFF000)+((unsigned int) virtual_addr & 0x0000FFF);6/92 (395/1845e & 0xFFFF000)+((unsigned int) virtual_addr & 0x0000FFF);7/936/1846File Name to Write [DOS Format]: exercise3.c                                                                           M-D DOS Format        M-A Append            M-B Backup FileC Cancel      M-M Mac Format        M-P Prepend           ^T To Files [ Wrote 100 lines ]        ^O Write Out    ^W Where Is     ^K Cut Text     ^J Justify      ^C Cur Pos^Y Prev PageX Exit  ^R Read File    ^\ Replace      ^U Uncut Text   ^T To Spell     ^_ Go To Line   ^V Next Page[ line 77/101 (76%), col 10/10 (100%), char 1375/1846 (74%) ]6537/93 (39%), char 1316/1846 (71%) ]8/93 (407918403914202513624735846957/93 (5068179285039143022513624835946/93 (605716827938604915402613724835946/93 (7057268379483837293/93 (100%), char 1372/1846 (74%) ]Use "fg" to return to nano.

[1]+  Stopped                 nano -c exercise3.c
student@2ac:~/exam3$ nano -c exercise3.c 
File exercise3.c is being edited (by student with nano 2.5.3, PID 1714); continue?                                Y Yes N No^C Cancel [ Reading File ][ Read 100 lines (Converted from DOS format) ]  GNU nano 2.5.3                        File: exercise3.c                                                        #include <stdio.h>#include <sys/types.h>#include <unistd.h>#include <stdlib.h>#include <math.h>#include <atc/linmem.h>int global = 0xABCFEF02;int task(){return 0xABCFEF03;}int type(int number, int n) {int aux = (number / (int)pow(10, n)) % 10;if (aux <= 3) {return 1;}else if (aux <=6){return 2;}else {return 3;}}int main(void){// *** Start GAP 1 ***// Fill with your DNI without letterint DNI =71789634 ;// *** End GAP 1 ***unsigned int pte_value, ph_addr, f_vp;int local = 0xABCFEDF1;void *var;int examType = type(DNI, 2);if (examType == 1){var = (void *)&local;}else if (examType == 2){var = (void *)&task;}^G Get Help     ^O Write Out    ^W Where Is     ^K Cut Text     ^J Justify^C Cur Pos^Y Prev Page^X ExitR Read File    ^\ Replace^U Uncut Text   ^T To Spell     ^_ Go To Line   ^V Next Page[ line 2/101 (1%), col 1/23 (4%), char 19/1846 (1%) ]320 (54224363541884[ line 6/101 (5%), col 1/24 (4%), char 1005761 (100%), char 124/1846 (6%) ]8725 (4%), char 125981 (100%), char 150/1846 (8%) ]10/101 (9%), col 1/11 (91[ line 11/101 (102 (5062217 (3432 (5089[ line 14/101 (13%), col 1/1 (10610%) ] [ line 15/101 (14%), col 1/30 (376547 (2211[ line 17/101 (16%), col 1/1 (100644 [ line 18/101 (17%), col 1/23 (45[ line 19/101 (18%), col 1/10 (10815 [ line 20/101 (19%), col 1/26 (34[ line 21/101 (20%), col 1/10 (10966 [ line 22/101 (21%), col 1/26 (39[ line 23/101 (22%), col 1/10 (103187 [ line 24/101 (23%), col 1/26 (321[ line 25/101 (24%), col 1/10 (10338 [ line 26/101 (25%), col 1/14 (76[ line 27/101 (26%), col 1/10 (1043 [ line 28/101 (27%), col 1/26 (36[ line 29/101 (28%), col 1/10 (10589 [ line 30/101 (29%), col 1/2 (561[ line 31/101 (30%), col 1/1 (103 [ line 32/101 (31%), col 1/15 (64322 (5079204331 (3815445 (240516528 (3433769645879 (118669847 (2840932 (352814019 (5539219 (1165303237 (274327 (392[ line 45/101 (44%), col 1/10 (10613 [ line 46/101 (45%), col 1/38 (220[ line 47/101 (46%), col 1/10 (10444 [ line 48/101 (47%), col 1/32 (375[ line 49/101 (48%), col 1/10 (10726 [ line 50/101 (49%), col 1/37 (25[ line 51/101 (50%), col 1/10 (10987else {var = (void *)&global;}// *** Start GAP 2 ***// Save in "pte_value" the page table entry associated with the virtual address that stores "var"if (get_pte(var, &pte_value)){perror("Linmem module error");return -1;}// *** End GAP 2 ***// *** Start GAP3 *** // Check that the page is in memoryif ((pte_value & 0x00000001) == 1){// Get the flags associated to the memory page and store them in the variable "f_vp"f_vp = (unsigned int)(pte_value & 0x0000FFF);// Get the physical address of the memory and store them in the variable "ph_addr"ph_addr = (pte_value & 0xFFFF000)+((unsigned int) virtual_addr & 0x0000FFF);} [ line 52/101 (51%), col 1/14 (7701[ line 53/101 (52%), col 1/10 (1088 [ line 54/101 (53%), col 1/39 (211[ line 55/101 (54%), col 1/10 (1036965 (109407640 [ line 58/101 (57%), col 1/31 (31[ line 59/101 (58%), col 1/106 (0651 [ line 60/101 (59%), col 1/38 (28646[ line 61/101 (60%), col 1/10 (10958 [ line 62/101 (61%), col 1/47 (283227 (393150[ line 64/101 (63%), col 1/10 (10441 [ line 65/101 (64%), col 1/29 (37659 (1169276718731 (339844 (2974[ line 70/101 (69%), col 1/43 (2%), char 1034617010 (10%), char 1070/1846 (57%) ]211 (383262 (1%), char 1160/1846 (62%) ]431 (100%), char 1208/1846 (65%) ]5499 (1%), char 120965394707610 (10%), char 1373/1846 (74%) ]}// *** End GAP 3 ***else{perror("The page has no page frame allocated\n");return -1;}       printf("Virtual Address:\t%.8Xh\n", (unsigned int) var);printf("Physical Address:\t%.8Xh\n", ph_addr);printf("Flags Virtual Page:\t%.3Xh\n", f_vp);// *** Start GAP 4 ***// Show ONLY the page table entry// *** End GAP 4 ***printf("\nProcess Identifier (PID): %d\n", getpid());printf("\n---- Press [ENTER] to continue");getchar();return 0;}8729 (3%), char 13769813 (79858090 (10%), char 1404/1846 (76%) ]18066 (1%), char 14072127 (35993217 (57243 (100%), char 1476/1846 (79%) ]5465 (1%), char 1477/1846 (80%) ]65553535464770431 (100%), char 1476/1846 (79%) ]327 (5%), char 14722127 (3591066 (107607910 (10%), char 1404/1846 (76%) ]7983 (7%), char 1398/1846 (75%) ]8729 (37647610 (10%), char 1373/1846 (74%) ]6593 (1%), char 1294/1846 (70%) ]54909656539470[ line 76/101 (75%), col 9300%), char 1372/1846 (74%) ]2/93 (98%), char 13711700669895884773636255144033/93 (89228117006597948837726Modified6/925/18455/914/18444/903/18433/892/18422/88 (811/18411/870/18400/8649/183969/858/18388/84 (807/18373 (816ar & 0x0000FFF);9/84 (828/1837File Name to Write [DOS Format]: exercise3.c                                                                           M-D DOS Format        M-A Append            M-B Backup FileC Cancel      M-M Mac Format        M-P Prepend           ^T To Files [ Wrote 100 lines ]        ^O Write Out    ^W Where Is     ^K Cut Text     ^J Justify      ^C Cur Pos^Y Prev PageX Exit  ^R Read File    ^\ Replace      ^U Uncut Text   ^T To Spell     ^_ Go To Line   ^V Next Page[ line 77/101 (76%), col 10/10 (100%), char 1366/1837 (74%) ]8729/298859813/13948090/107618066/6644982127/276293217/16 [ line 84/101 (83%), col 1/1 (100%), char 1467[ line 85/101 (84%), col 65/65 (100%), char 1525/1837 (83%) ]6555/5735764/546208 [ line 88/101 (87%), col 9/9 (100%), char 1622[ line 89/101 (88%), col 31/31 (100%), char 1646/1837 (89%) ]90942/428191 [ line 91/101 (90%), col 9/9 (100%), char 1683Modified printf("Flags Virtual Page:\t%.3Xh\n", f_vp);[ line 91/101 (90%), col 54/54 (100%), char 1728/1882 (91%) ]3/54 (98%), char 172726614502449038/54 (88277165053194183/54 (797276155044392380207/54 (68166054094283172/54 (5961752963/54 (6174283/537/18812/52 (616/18801/51 (605/18790/504/187829/49 (593/18778/48 (582/18767/47 (571/18756/46 (560/18745/45 (55699/18734/44 (548/18723/43 (537/18712/42 (526/18701/41 (515/18690/40 (504/186819/39 (483/18678/38 (472/18667/37 (451/18656 (474P:\t%.3Xh\n", f_vp);8/37 (482/1865g:\t%.3Xh\n", f_vp);9/38 (503/18668/37 (482/1865a:\t%.3Xh\n", f_vp);9/38 (503/1866g:\t%.3Xh\n", f_vp);20/39 (514/1867e:\t%.3Xh\n", f_vp);1/40 (525/1868 :\t%.3Xh\n", f_vp);2/41 (536/1869T:\t%.3Xh\n", f_vp);3/42 (547/1870a:\t%.3Xh\n", f_vp);4/43 (558/1871b:\t%.3Xh\n", f_vp);5/44 (569/1872l:\t%.3Xh\n", f_vp);6/45 (57700/1873e:\t%.3Xh\n", f_vp);7/46 (581/1874 :\t%.3Xh\n", f_vp);8/47 (592/1875E:\t%.3Xh\n", f_vp);9/48 (603/1876n:\t%.3Xh\n", f_vp);30/49 (614/1877t:\t%.3Xh\n", f_vp);1/50 (625/1878r:\t%.3Xh\n", f_vp);2/516/1879y:\t%.3Xh\n", f_vp);3/52 (637/188045857969107/52 (711183295340641852/52 (8063274485691 (8879_vp);0 (908vp);49 (917p);8 (936);7 (955 );6/4820/1876p);7/491/1877t);8/50 (962/1878e);9/513/18790892/42 (100%), char 1681/1879 (89%) ]89831/3146790942/428191909/51 (96%), char 1723/1879 (91%) ]_);50/524/1880v);1/535/1881a);2/546/1882l);3/557/1883u);4/568/1884e);5/579/1885File Name to Write [DOS Format]: exercise3.c                                                                           M-D DOS Format        M-A Append            M-B Backup FileC Cancel      M-M Mac Format        M-P Prepend           ^T To Files [ Wrote 100 lines ]        ^O Write Out    ^W Where Is     ^K Cut Text     ^J Justify      ^C Cur Pos^Y Prev PageX Exit  ^R Read File    ^\ Replace      ^U Uncut Text   ^T To Spell     ^_ Go To Line   ^V Next Pagestudent@2ac:~/exam3$ nano -c exercise3.c 
[ Reading File ][ Read 100 lines (Converted from DOS format) ]  GNU nano 2.5.3                        File: exercise3.c                                                        #include <stdio.h>#include <sys/types.h>#include <unistd.h>#include <stdlib.h>#include <math.h>#include <atc/linmem.h>int global = 0xABCFEF02;int task(){return 0xABCFEF03;}int type(int number, int n) {int aux = (number / (int)pow(10, n)) % 10;if (aux <= 3) {return 1;}else if (aux <=6){return 2;}else {return 3;}}int main(void){// *** Start GAP 1 ***// Fill with your DNI without letterint DNI =71789634 ;// *** End GAP 1 ***unsigned int pte_value, ph_addr, f_vp;int local = 0xABCFEDF1;void *var;int examType = type(DNI, 2);if (examType == 1){var = (void *)&local;}else if (examType == 2){var = (void *)&task;}^G Get Help     ^O Write Out    ^W Where Is     ^K Cut Text     ^J Justify^C Cur Pos^Y Prev Page^X Exit^R Read File    ^\ Replace^U Uncut Text   ^T To Spell     ^_ Go To Line   ^V Next Pagestudent@2ac:~/exam3$ gcc -Wall exercise3.c -o exercise3.c  -lrt -lmem -lm
student@2ac:~/exam3$ ./exercise3 
Linmem module error: No such file or directory
student@2ac:~/exam3$ ls
exercise3  exercise3.c
student@2ac:~/exam3$ ./exercise3 
Linmem module error: No such file or directory
student@2ac:~/exam3$ cd /usr/src/atc/linmenm
student@2ac:/usr/src/atc/linmem$ sudo make clean
[sudo] password for student: 
make -C /lib/modules/4.4.0-210-generic/build M=/usr/src/atc/linmem clean
make[1]: Entering directory '/usr/src/linux-headers-4.4.0-210-generic'
make[1]: Leaving directory '/usr/src/linux-headers-4.4.0-210-generic'
rm -f libmem.a libmem.o test
student@2ac:/usr/src/atc/linmem$ sudo make install
make -C /lib/modules/4.4.0-210-generic/build M=/usr/src/atc/linmem -Wall modules
make[1]: Entering directory '/usr/src/linux-headers-4.4.0-210-generic'
  CC [M]  /usr/src/atc/linmem/linmem.o
  Building modules, stage 2.
  MODPOST 1 modules
  CC      /usr/src/atc/linmem/linmem.mod.o
  LD [M]  /usr/src/atc/linmem/linmem.ko
make[1]: Leaving directory '/usr/src/linux-headers-4.4.0-210-generic'
gcc -Wall -c libmem.c
ar rcs libmem.a libmem.o
chmod +x opt/*
mkdir -p /opt/linmem-1.0
cp opt/* /opt/linmem-1.0/
cp linmem.ko /lib/modules/4.4.0-210-generic/kernel/drivers/misc/
ln -f -s /opt/linmem-1.0 /opt/linmem
cp libmem.a /usr/lib/
mkdir -p /usr/include/atc
cp include/linmem.h /usr/include/atc/
depmod -a
cp systemd/linmem.service /lib/systemd/system/
systemctl link /lib/systemd/system/linmem.service
systemctl enable linmem.service
systemctl start linmem.service
student@2ac:/usr/src/atc/linmem$ systemctl status linmem
 linmem.service - Linmem driver
   Loaded: loaded (/lib/systemd/system/linmem.service; enabled; vendor preset: enabled)
   Active: active (exited) since Mon 2023-12-18 17:41:34 CET; 7s ago
  Process: 2744 ExecStart=/opt/linmem/load (code=exited, status=0/SUCCESS)
 Main PID: 2744 (code=exited, status=0/SUCCESS)

Dec 18 17:41:34 2ac systemd[1]: Starting Linmem driver...
Dec 18 17:41:34 2ac systemd[1]: Started Linmem driver.
student@2ac:/usr/src/atc/linmem$ cd ..
student@2ac:/usr/src/atc$ cd
student@2ac:~$ ls
1-1text.txt  2ac-l.i-2-uo294067  exam2  exam3  prueba
student@2ac:~$ dc 2cd 2ac-l.i-2-uo294067/
student@2ac:~/2ac-l.i-2-uo294067$ cdlscd ..
student@2ac:~$ cd exam3
student@2ac:~/exam3$ ls
exercise3  exercise3.c
student@2ac:~/exam3$ lscd exam3..2ac-l.i-2-uo294067/lscd ..systemctl status linmemudo make installcleancd /usr/src/atc/linmem./exercise3 ls./exercise3 gcc -Wall exercise3.c -o exercise3 -lrt -lmem -lm
student@2ac:~/exam3$ gcc -Wall exercise3.c -o exercise3 -lrt -lmem -lmlscd exam3..2ac-l.i-2-uo294067/lscd ..systemctl status linmemudo make installcleancd /usr/src/atc/linmem./exercise3 
Virtual Address:0804868Bh
Physical Address:0B1EE68Bh
Flags Virtual Page:025h
Page Table Entry:3B1EE025h

Process Identifier (PID): 2766

---- Press [ENTER] to continue
student@2ac:~/exam3$ ^C
student@2ac:~/exam3$ 